name: Deploy to Amazon ECS

on:
  push:
    branches:
      - feature/hwjung-a

env:
  AWS_REGION: ap-northeast-1
  ECR_REGISTRY: 417010949107.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_REPOSITORY: fl-jung-ecr
  ECS_SERVICE: fl-ecs-service
  ECS_CLUSTER: fl-jung-ecs-cluster
  ECS_TASK_DEFINITION: fl-jung-2-ecs-task-definition
  CONTAINER_NAME: fl-jung-2-container
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: gradle build -x test

      - name: Change artifact file name
        run: mv build/libs/restapi-0.0.1-SNAPSHOT.jar ./artifact.jar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
            mask-password: 'true'
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{env.ECR_REPOSITORY}}:${IMAGE_TAG} .
          docker push $ECR_REGISTRY/${{env.ECR_REPOSITORY}}:${IMAGE_TAG}
          echo "image=$ECR_REGISTRY/${{env.ECR_REPOSITORY}}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task_definition.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
